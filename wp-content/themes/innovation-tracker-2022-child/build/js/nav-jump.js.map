{"version":3,"names":[],"mappings":"","sources":["nav-jump.js"],"sourcesContent":["(($) => {\n  const target = $('.nav-jump');\n  const initialized = target.hasClass(\"initialized\");\n  if (!initialized) {\n    target.addClass(\"initialized\");\n\n    let topTimeout;\n    const $body = $('body');\n    const $window = $(window);\n    const $buttons = target.find(\".wp-block-buttons\");\n    const $clone = $buttons.clone();\n    const $stickyWrapper = $(\"<div class='nav-jump sticky'>\");\n    const $container = $(\"<div class='container'></div>\");\n    $stickyWrapper.append($container);\n    $container.append($clone);\n\n    let sticky = false;\n\n    const setSticky = (on) => {\n      if (sticky !== on) {\n        sticky = on;\n        if (on) {\n          $body.append($stickyWrapper);\n        } else {\n          $stickyWrapper.remove();\n        }\n      }\n    }\n\n    const setTop = () => {\n      if (topTimeout) clearTimeout(topTimeout);\n      topTimeout = setTimeout(() => {\n        setSticky($buttons.offset().top - $window.scrollTop() <= 0);\n      },1);\n    }\n\n    setTop();\n\n    window.addEventListener(\"scroll\",setTop);\n    window.addEventListener(\"resize\",setTop);\n\n    const resizeObserver = new ResizeObserver(entries => {\n      setTop();\n    });\n\n    // start observing a DOM node\n    resizeObserver.observe(document.body);\n  }\n})(jQuery);"],"file":"nav-jump.js"}