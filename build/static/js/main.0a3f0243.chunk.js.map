{"version":3,"sources":["Sankey.js","index.js"],"names":["size","getMousePosition","event","CTM","target","getScreenCTM","x","clientX","e","a","y","clientY","f","d","Rect","_ref","index","x0","x1","y0","y1","name","length","value","colors","react_default","createElement","Fragment","width","height","fill","data-index","style","d3","darker","alignmentBaseline","fontSize","textAnchor","pointerEvents","userSelect","Link","_ref2","data","link","d3sankeyLinkHorizontal","id","concat","gradientUnits","source","x2","offset","stopColor","stroke","strokeOpacity","strokeWidth","Sankey","props","dragElement","useRef","graph","edit","sankey","d3sankey","nodeAlign","d3sankeyJustify","nodeWidth","nodePadding","extent","onMouseUp","current","onMouseDown","tagName","parseFloat","getAttributeNS","onMouseMove","coord","setAttributeNS","useEffect","window","addEventListener","removeEventListener","_graph$current","links","nodes","map","i","Sankey_Link","Sankey_Rect","App","_useState","useState","_useState2","Object","slicedToArray","setData","_useState3","_useState4","editMode","setEditMode","fetch","then","res","json","className","onClick","src_Sankey","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mNASMA,EACG,IADHA,EAEI,IAGJC,EAAmB,SAAAC,GACvB,IAAMC,EAAMD,EAAME,OAAOC,eAEzB,MAAO,CACLC,GAAIJ,EAAMK,QAAUJ,EAAIK,GAAKL,EAAIM,EACjCC,GAAIR,EAAMS,QAAUR,EAAIS,GAAKT,EAAIU,IAI/BC,EAAO,SAAAC,GAA4D,IAAzDC,EAAyDD,EAAzDC,MAAOC,EAAkDF,EAAlDE,GAAIC,EAA8CH,EAA9CG,GAAIC,EAA0CJ,EAA1CI,GAAIC,EAAsCL,EAAtCK,GAAIC,EAAkCN,EAAlCM,KAAaC,GAAqBP,EAA5BQ,MAA4BR,EAArBO,QAAQE,EAAaT,EAAbS,OAC1D,OACEC,EAAAhB,EAAAiB,cAAAD,EAAAhB,EAAAkB,SAAA,KACEF,EAAAhB,EAAAiB,cAAA,QACEpB,EAAGW,EACHP,EAAGS,EACHS,MAAOV,EAAKD,EACZY,OAAQT,EAAKD,EACbW,KAAMN,EAAOR,EAAQM,GACrBS,aAAYf,IAEdS,EAAAhB,EAAAiB,cAAA,QACEpB,EAAGW,EAAKjB,EAAa,EAAIkB,EAAK,EAAID,EAAK,EACvCP,GAAIU,EAAKD,GAAM,EACfa,MAAO,CACLF,KAAMG,IAAOT,EAAOR,EAAQM,IAASY,SACrCC,kBAAmB,SACnBC,SAAU,EACVC,WAAYpB,EAAKjB,EAAa,EAAI,QAAU,MAC5CsC,cAAe,OACfC,WAAY,SAGblB,KAMHmB,EAAO,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,KAAMd,EAA4Ba,EAA5Bb,MAAON,EAAqBmB,EAArBnB,OAAQE,EAAaiB,EAAbjB,OAC7BmB,EAAOC,cAEb,OACEnB,EAAAhB,EAAAiB,cAAAD,EAAAhB,EAAAkB,SAAA,KACEF,EAAAhB,EAAAiB,cAAA,YACED,EAAAhB,EAAAiB,cAAA,kBACEmB,GAAE,YAAAC,OAAcJ,EAAK1B,OACrB+B,cAAc,iBACd7B,GAAIwB,EAAKM,OAAO9B,GAChB+B,GAAIP,EAAKtC,OAAOa,IAEhBQ,EAAAhB,EAAAiB,cAAA,QAAMwB,OAAO,IAAIC,UAAW3B,EAAOkB,EAAKM,OAAOhC,MAAQM,KACvDG,EAAAhB,EAAAiB,cAAA,QAAMwB,OAAO,OAAOC,UAAW3B,EAAOkB,EAAKtC,OAAOY,MAAQM,OAG9DG,EAAAhB,EAAAiB,cAAA,QACEb,EAAG8B,EAAKD,GACRZ,KAAM,OACNsB,OAAM,iBAAAN,OAAmBJ,EAAK1B,MAAxB,KACNqC,cAAe,GACfC,YAAa1B,MAuFN2B,EAjFA,SAAAC,GACb,IAAMC,EAAcC,iBAAO,MACrBC,EAAQD,iBAAO,MACfR,EAASQ,iBAAO,MAEhBlC,EAASgC,EAAMI,KAAO3B,IAAqBA,IAC3C4B,EAASC,cACZC,UAAUC,KACVC,UAAU,IACVC,YAAY,IACZC,OAAO,CAAC,CAAC,EAAG,GAAI,CAACnE,EAAYA,KAE1BoE,EAAY,SAAA5D,GAChBiD,EAAYY,QAAU,MAGlBC,EAAc,SAAA9D,GACO,SAArBA,EAAEJ,OAAOmE,UACXd,EAAYY,QAAU7D,EAAEJ,OACxB8C,EAAOmB,QAAUpE,EAAiBO,GAClC0C,EAAOmB,QAAQ3D,GAAK8D,WAAWhE,EAAEJ,OAAOqE,eAAe,KAAM,QAI3DC,EAAc,SAAAlE,GAClB,GAAIiD,EAAYY,QAAS,CACvB,IAAMM,EAAQ1E,EAAiBO,GAC/BiD,EAAYY,QAAQO,eAAe,KAAM,IAAKD,EAAMjE,EAAIwC,EAAOmB,QAAQ3D,KAgB3E,GAZAmE,oBAAU,WAKR,OAJAC,OAAOC,iBAAiB,UAAWX,GACnCU,OAAOC,iBAAiB,YAAaT,GACrCQ,OAAOC,iBAAiB,YAAaL,GAE9B,WACLI,OAAOE,oBAAoB,UAAWZ,GACtCU,OAAOE,oBAAoB,YAAaV,GACxCQ,OAAOE,oBAAoB,YAAaN,KAEzC,IAEClB,EAAMd,KAAM,CACdiB,EAAMU,QAAUR,EAAOL,EAAMd,MADf,IAAAuC,EAEWtB,EAAMU,QAAvBa,EAFMD,EAENC,MAAOC,EAFDF,EAECE,MAEf,OACE1D,EAAAhB,EAAAiB,cAAA,OAAKE,MAAO5B,EAAY6B,OAAQ7B,GAC9ByB,EAAAhB,EAAAiB,cAAA,SACGwD,EAAME,IAAI,SAACvE,EAAGwE,GAAJ,OACT5D,EAAAhB,EAAAiB,cAAC4D,EAAD,CACE5C,KAAM7B,EACNe,MAAOf,EAAEe,MACTN,OAAQ6D,EAAM7D,OACdE,OAAQA,OAIdC,EAAAhB,EAAAiB,cAAA,SACGyD,EAAMC,IAAI,SAACvE,EAAGwE,GAAJ,OACT5D,EAAAhB,EAAAiB,cAAC6D,EAAD,CACEvE,MAAOH,EAAEG,MACTC,GAAIJ,EAAEI,GACNC,GAAIL,EAAEK,GACNC,GAAIN,EAAEM,GACNC,GAAIP,EAAEO,GACNC,KAAMR,EAAEQ,KACRE,MAAOV,EAAEU,MACTD,OAAQ6D,EAAM7D,OACdE,OAAQA,QAQpB,OAAOC,EAAAhB,EAAAiB,cAAA,6BCvJT,SAAS8D,IAAM,IAAAC,EACWC,mBAAS,MADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACN/C,EADMiD,EAAA,GACAG,EADAH,EAAA,GAAAI,EAEmBL,oBAAS,GAF5BM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAENE,EAFMD,EAAA,GAEIE,EAFJF,EAAA,GAUb,OANAnB,oBAAU,WACRsB,MAAM,uEACHC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAA1D,GAAI,OAAIoD,EAAQpD,MACvB,IAGDjB,EAAAhB,EAAAiB,cAAA,OAAK6E,UAAU,OACb9E,EAAAhB,EAAAiB,cAAA,WACED,EAAAhB,EAAAiB,cAAA,UAAQ8E,QAAS,kBAAMN,GAAaD,KAApC,cAEFxE,EAAAhB,EAAAiB,cAAC+E,EAAD,CAAQ/D,KAAMA,EAAMkB,KAAMqC,KAKhC,IAAMS,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOrF,EAAAhB,EAAAiB,cAAC8D,EAAD,MAASkB","file":"static/js/main.0a3f0243.chunk.js","sourcesContent":["import * as d3 from \"d3\";\nimport {sankey as d3sankey, \n  sankeyCenter as d3sankeyCenter, \n  sankeyLeft as d3sankeyLeft, \n  sankeyRight as d3sankeyRight, \n  sankeyJustify as d3sankeyJustify, \n  sankeyLinkHorizontal as d3sankeyLinkHorizontal } from \"d3-sankey\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nconst size = {\n  width: 700,\n  height: 600\n};\n\nconst getMousePosition = event => {\n  const CTM = event.target.getScreenCTM();\n\n  return {\n    x: (event.clientX - CTM.e) / CTM.a,\n    y: (event.clientY - CTM.f) / CTM.d\n  };\n};\n\nconst Rect = ({ index, x0, x1, y0, y1, name, value, length, colors }) => {\n  return (\n    <>\n      <rect\n        x={x0}\n        y={y0}\n        width={x1 - x0}\n        height={y1 - y0}\n        fill={colors(index / length)}\n        data-index={index}\n      />\n      <text\n        x={x0 < size.width / 2 ? x1 + 6 : x0 - 6}\n        y={(y1 + y0) / 2}\n        style={{\n          fill: d3.rgb(colors(index / length)).darker(),\n          alignmentBaseline: \"middle\",\n          fontSize: 9,\n          textAnchor: x0 < size.width / 2 ? \"start\" : \"end\",\n          pointerEvents: \"none\",\n          userSelect: \"none\"\n        }}\n      >\n        {name}\n      </text>\n    </>\n  );\n};\n\nconst Link = ({ data, width, length, colors }) => {\n  const link = d3sankeyLinkHorizontal();\n\n  return (\n    <>\n      <defs>\n        <linearGradient\n          id={`gradient-${data.index}`}\n          gradientUnits=\"userSpaceOnUse\"\n          x1={data.source.x1}\n          x2={data.target.x0}\n        >\n          <stop offset=\"0\" stopColor={colors(data.source.index / length)} />\n          <stop offset=\"100%\" stopColor={colors(data.target.index / length)} />\n        </linearGradient>\n      </defs>\n      <path\n        d={link(data)}\n        fill={\"none\"}\n        stroke={`url(#gradient-${data.index})`}\n        strokeOpacity={0.5}\n        strokeWidth={width}\n      />\n    </>\n  );\n};\n\nconst Sankey = props => {\n  const dragElement = useRef(null);\n  const graph = useRef(null);\n  const offset = useRef(null);\n\n  const colors = props.edit ? d3.interpolateWarm : d3.interpolateCool;\n  const sankey = d3sankey()\n    .nodeAlign(d3sankeyJustify)\n    .nodeWidth(10)\n    .nodePadding(10)\n    .extent([[0, 0], [size.width, size.height]]);\n\n  const onMouseUp = e => {\n    dragElement.current = null;\n  };\n\n  const onMouseDown = e => {\n    if (e.target.tagName === \"rect\") {\n      dragElement.current = e.target;\n      offset.current = getMousePosition(e);\n      offset.current.y -= parseFloat(e.target.getAttributeNS(null, \"y\"));\n    }\n  };\n\n  const onMouseMove = e => {\n    if (dragElement.current) {\n      const coord = getMousePosition(e);\n      dragElement.current.setAttributeNS(null, \"y\", coord.y - offset.current.y);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"mouseup\", onMouseUp);\n    window.addEventListener(\"mousedown\", onMouseDown);\n    window.addEventListener(\"mousemove\", onMouseMove);\n\n    return () => {\n      window.removeEventListener(\"mouseup\", onMouseUp);\n      window.removeEventListener(\"mousedown\", onMouseDown);\n      window.removeEventListener(\"mousemove\", onMouseMove);\n    };\n  }, []);\n\n  if (props.data) {\n    graph.current = sankey(props.data);\n    const { links, nodes } = graph.current;\n\n    return (\n      <svg width={size.width} height={size.height}>\n        <g>\n          {links.map((d, i) => (\n            <Link\n              data={d}\n              width={d.width}\n              length={nodes.length}\n              colors={colors}\n            />\n          ))}\n        </g>\n        <g>\n          {nodes.map((d, i) => (\n            <Rect\n              index={d.index}\n              x0={d.x0}\n              x1={d.x1}\n              y0={d.y0}\n              y1={d.y1}\n              name={d.name}\n              value={d.value}\n              length={nodes.length}\n              colors={colors}\n            />\n          ))}\n        </g>\n      </svg>\n    );\n  }\n\n  return <div>Loading</div>;\n};\n\nexport default Sankey;\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Sankey from \"./Sankey\";\n\nimport \"./styles.css\";\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n\n  useEffect(() => {\n    fetch(\"https://raw.githubusercontent.com/ozlongblack/d3/master/energy.json\")\n      .then(res => res.json())\n      .then(data => setData(data));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <button onClick={() => setEditMode(!editMode)}>Edit Mode</button>\n      </div>\n      <Sankey data={data} edit={editMode} />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}